<?php

namespace SkylinkEbook\GesOrganisationBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * OrganisationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrganisationRepository extends EntityRepository
{
    /**
     * Recupere toutes les promotions à partir de la requete ci-dessous
     * @return listePromotions
     */
    public function myPromotion($typeOrg){
        
        //$queryBuilder = $this->createQueryBuilder('o');
        // Méthode équivalente, mais plus longue :
        $queryBuilder = $this->_em->createQueryBuilder()
                ->select('o')
                ->from($this->_entityName, 'o')
                ->where('o.type = :type')
                ->setParameter('type', $typeOrg)
                ->orderBy('o.id', 'ASC');
                // Dans un repository, $this->_entityName est le namespace de l'entité gérée : Organisation
                // Ici, il vaut donc SkylinkEbook\GesOrganisationBundle\Entity\Organisation
                // On a fini de construire notre requête

        // On récupère la Query à partir du QueryBuilder
        $query = $queryBuilder->getQuery();
        
        // On récupère les résultats à partir de la Query
        $resultats = $query->getResult();
        
        // On retourne ces résultats
        return $resultats;
    }
    
    /**
     * Recupére les Départments
     */
    public function myDepartement($typeOrg) {
        
        // On passe par le QueryBuilder vide de l'EntityManager pour l'exemple
        $qb = $this->_em->createQueryBuilder();
        
        $qb->select('o')
                ->from('SkylinkEbookGesOrganisationBundle:Organisation', 'o')
                ->where('o.type = :type')
                ->setParameter('type', $typeOrg)
                ->orderBy('o.id', 'ASC');
        
        //On retourne les résultats récupèrés à partir de la Query
        return $qb->getQuery()
                  ->getResult();
    }
    
    public function myUniversite($typeOrg){
        // On utilise le QueryBuilder créé par le repository directement pour gagner du temps
        // Plus besoin de faire le select() ni le from() par la suite donc
        $qb = $this->createQueryBuilder('o');
        
        $qb->where('o.type = :type')
           ->setParameter('type', $typeOrg)
           //->andWhere('a.date < :annee')
           //->setParameter('annee', $annee)
           ->orderBy('o.id', 'ASC');
        
        return $qb->getQuery()
                  ->getResult();
    }

}
